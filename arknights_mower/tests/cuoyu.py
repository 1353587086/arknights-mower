input_日_钱_基建内_永远上班 = 50000
input_日_钱_基建内_暂时上班 = 30000
input_日_书_基建内 = 16500
input_预设土量 = 16000
input_搓玉人_效率和 = 2.1505
input_卖玉人_效率和 = 3
input_目标练度钱 = 761409
input_目标练度书 = 588286
目标练度钱书比 = input_目标练度钱 / input_目标练度书
练度列表 = []
练度列表_离谱 = []
日_钱_基建外 = 43482.63
日_书_基建外 = 36284.48
for 土量 in range(input_预设土量, 25000, 80):
    for 日_钱_基建内_永远上班 in range(0, 60000, 1000):
        for 日_书_基建内 in range(0, 20000, 1000):
            # 钱
            搓玉所需钱数 = 土量 * 800
            卖玉天数 = int(土量 / 2 / 2 / 24 * 2 / input_卖玉人_效率和) + 1
            基建内_年产钱 = 日_钱_基建内_永远上班 * 365 + input_日_钱_基建内_暂时上班 * (365 - 卖玉天数)
            总_年产钱 = 基建内_年产钱 + 日_钱_基建外 * 365 - 搓玉所需钱数
            # 书
            搓玉天数 = int(土量 / 2 / 24 / input_搓玉人_效率和) + 1
            总_年产书 = 日_书_基建内 * (365 - 搓玉天数) + 日_书_基建外 * 365
            总_日产钱 = 总_年产钱 / 365
            总_日产书 = 总_年产书 / 365
            # 最终计算
            日_钱书总数 = 日_钱_基建内_永远上班 + input_日_钱_基建内_暂时上班 + 日_书_基建内
            总_钱书比 = round(总_日产钱 / 总_日产书, 2)
            总_能练干员 = int(min(总_年产钱 / input_目标练度钱, 总_年产书, input_目标练度书))
            日_钱_基建内 = int(日_钱_基建内_永远上班 + input_日_钱_基建内_暂时上班)
            日销售记录 = [日_钱_基建内, 日_书_基建内, 总_钱书比, 总_能练干员, 搓玉天数, 卖玉天数, 土量, 土量 * 5]
            for i in 日销售记录:
                if i < 0:
                    print("出错了")
            练度列表_离谱.append(日销售记录)
            if 日_钱书总数 < 100000 and abs(总_钱书比 - 目标练度钱书比) < 0.005:
                练度列表.append(日销售记录)


a = "日_钱_基建内, 日_书_基建内, 总_钱书比, 总_能练干员, 搓玉天数, 卖玉天数, 土量, 土量 * 5"
list2 = a.split(", ")

try:
    练度列表排序 = sorted(练度列表, key=lambda x: x[-1])
    for val1, val2 in zip(list2, 练度列表排序[0]):
        print(f"{val1}: {val2}")


except:
    print("出问题了")
    练度列表排序 = sorted(练度列表_离谱, key=lambda x: x[0])
    for val1, val2 in zip(list2, 练度列表排序[0]):
        print(f"{val1}: {val2}")
